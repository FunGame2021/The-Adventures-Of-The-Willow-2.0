name: MultiPlatformBuildAndRelease
on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  buildForMac:
    name: Build for Mac
    runs-on: macos-11
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - The-Adventures-Of-The-Willow-2.0
        unityVersion:
          - 2022.3.16f1
        targetPlatform:
          - StandaloneOSX

    steps:
      # Configuração do Node.js
      - name: Set up Node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      # Checkout do código
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      # Criação da pasta Library se não existir
      - name: Create Library folder if it does not exist
        run: |
          mkdir -p ${{ matrix.projectPath }}/Library

      # Cache para a pasta Library
      - uses: actions/cache@v3
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{ hashFiles(matrix.projectPath) }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
            Library-${{ matrix.projectPath }}-
            Library-

      # Construção do projeto Unity para macOS
      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          customParameters: '-myParameter myValue -myBoolean -ThirdParameter andItsValue'

      # Upload do build como artefato
      - uses: actions/upload-artifact@v3
        with:
          name: Build_Mac
          path: build

  buildForLinux:
    name: Build for Linux
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - The-Adventures-Of-The-Willow-2.0
        unityVersion:
          - 2022.3.16f1
        targetPlatform:
          - StandaloneLinux64
    timeout-minutes: 200
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - uses: actions/cache@v3
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{ hashFiles(matrix.projectPath) }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
            Library-${{ matrix.projectPath }}-
            Library-

      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          customParameters: '-myParameter myValue -myBoolean -ThirdParameter andItsValue'

      - uses: actions/upload-artifact@v3
        with:
          name: Build_Linux
          path: build

  buildForWindows32:
    name: Build for Windows 32-bit
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - The-Adventures-Of-The-Willow-2.0
        unityVersion:
          - 2022.3.16f1
        targetPlatform:
          - StandaloneWindows
    timeout-minutes: 220
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - uses: actions/cache@v3
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{ hashFiles(matrix.projectPath) }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
            Library-${{ matrix.projectPath }}-
            Library-

      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          customParameters: '-myParameter myValue -myBoolean -ThirdParameter andItsValue'

      - uses: actions/upload-artifact@v3
        with:
          name: Build_Windows
          path: build

  buildForWindows64:
    name: Build for Windows 64-bit
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - The-Adventures-Of-The-Willow-2.0
        unityVersion:
          - 2022.3.16f1
        targetPlatform:
          - StandaloneWindows64
    timeout-minutes: 220
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - uses: actions/cache@v3
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{ hashFiles(matrix.projectPath) }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
            Library-${{ matrix.projectPath }}-
            Library-

      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          customParameters: '-myParameter myValue -myBoolean -ThirdParameter andItsValue'

      - uses: actions/upload-artifact@v3
        with:
          name: Build_Windows64
          path: build

  createRelease:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [buildForMac, buildForLinux, buildForWindows32, buildForWindows64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Linux Artifacts
        uses: actions/download-artifact@v2
        with:
          name: Build_Linux
          path: build/Linux

      - name: Download Windows 32-bit Artifacts
        uses: actions/download-artifact@v2
        with:
          name: Build_Windows
          path: build/Windows

      - name: Download Windows 64-bit Artifacts
        uses: actions/download-artifact@v2
        with:
          name: Build_Windows64
          path: build/Windows64

      - name: Download Mac Artifacts
        uses: actions/download-artifact@v2
        with:
          name: Build_Mac
          path: build/Mac

      - name: Combine Artifacts
        run: |
          mkdir -p build/combined
          cp -r build/Mac/* build/combined/
          cp -r build/Linux/* build/combined/
          cp -r build/Windows/* build/combined/
          cp -r build/Windows64/* build/combined/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: v0.0.1.${{ github.run_number }}
          release_name: "Release v0.0.1.${{ github.run_number }} Alpha Version"
          body: |
            ### The Adventures of the Willow 2.0 - Alpha Version

            This is the alpha version release of The Adventures of the Willow 2.0.

            **Release Notes:**
            - Fixed problem not being able to exit the level when testing in the level editor, improvements to the main menu.
            - Note: It's an Alpha version, it still has a lot of bugs and is missing things, don't use the editor as something final, because you could lose the level save ("In principle nothing was detected or found about this, but use it only for testing and see if there are any problems").

      - name: Upload Linux Artifact
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/Linux/Build_Linux.zip
          asset_name: TheAdventuresOfTheWillow2.0_Linux.zip

      - name: Check for Linux Artifact
        run: |
          if [[ ! stat -c %f build/Linux/Build_Linux.zip ]]; then
          echo "File ./build/Linux/Build_Linux.zip does not exist."
          exit 1
            fi
    
      - name: Upload Windows 32-bit Artifact
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/Windows/Build_Windows.zip
          asset_name: TheAdventuresOfTheWillow2.0_Win32.zip

      - name: Upload Windows 64-bit Artifact
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/Windows64/Build_Windows64.zip
          asset_name: TheAdventuresOfTheWillow2.0_Win64.zip
          
      - name: Upload Mac Artifact
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/Mac/Build_Mac.zip
          asset_name: TheAdventuresOfTheWillow2.0_Mac.zip

